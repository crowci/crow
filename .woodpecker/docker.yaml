variables:
  - &golang_image 'docker.io/golang:1.23-alpine3.21'
  - &node_image 'docker.io/node:23-alpine'
  - &xgo_image 'docker.io/techknowlogick/xgo:go-1.23.x'
  - &buildx_plugin 'docker.io/woodpeckerci/plugin-docker-buildx:5.1.0'
  - &platforms_release 'linux/arm/v6,linux/arm/v7,linux/arm64/v8,linux/386,linux/amd64,linux/ppc64le,linux/riscv64,linux/s390x,freebsd/arm64,freebsd/amd64,openbsd/arm64,openbsd/amd64'
  - &platforms_server 'linux/arm/v7,linux/arm64/v8,linux/amd64,linux/ppc64le,linux/riscv64'
  - &platforms_pr 'linux/amd64'
  - &platforms_alpine 'linux/arm/v6,linux/arm/v7,linux/arm64/v8,linux/amd64,linux/ppc64le'
  - &build_args 'CI_COMMIT_SHA=${CI_COMMIT_SHA},CI_COMMIT_BRANCH=${CI_COMMIT_BRANCH},CI_COMMIT_TAG=${CI_COMMIT_TAG}'

  # cspell:words woodpeckerbot netgo

  # vars used on push / tag events only
  - publish_logins: &publish_logins # Default DockerHub login
      - registry: https://ghcr.io/v2/
        username: crowci-bot
        password:
          from_secret: GITHUB_PKGS_TOKEN
  - &publish_repos_server 'ghcr.io/crowci/crow-server'
  - &publish_repos_agent 'ghcr.io/crowci/crow-agent'
  - &publish_repos_cli 'ghcr.io/crowci/crow-cli'
  - path: &when_path # web source code
      - 'web/**'
      # api source code
      - 'server/api/**'
      # go source code
      - '**/*.go'
      - 'go.*'
      # schema changes
      - 'pipeline/schema/**'
      # Dockerfile changes
      - 'docker/**'
      # pipeline config changes
      - '.woodpecker/docker.yaml'

when:
  - event: [pull_request, tag, deployment]

steps:
  vendor:
    image: *golang_image
    pull: true
    commands:
      - go mod vendor
    when:
      - event: pull_request
        evaluate: 'CI_COMMIT_PULL_REQUEST_LABELS contains "build_pr_images"'
      - event: pull_request
        path: *when_path
      - event: [tag, deployment]

  ###############
  # S e r v e r #
  ###############

  build-ui:
    image: *node_image
    directory: web/
    commands:
      - corepack enable
      - pnpm install --frozen-lockfile
      - pnpm build
    when:
      - event: pull_request
        evaluate: 'CI_COMMIT_PULL_REQUEST_LABELS contains "build_pr_images"'
      - event: pull_request
        path: *when_path
      - event: [tag, deployment]

  cross-compile-server-[pr]:
    depends_on:
      - vendor
      - build-ui
    image: *xgo_image
    pull: true
    commands:
      - apt update
      - apt install -y tree
      # install just FIXME: 'apt install -y just' from Debian >= 13
      - curl --proto '=https' --tlsv1.2 -sSf https://just.systems/install.sh | bash -s -- --to /usr/bin/
      - just cross-compile-server
    environment:
      PLATFORMS: linux|amd64;linux/arm64
      TAGS: sqlite sqlite_unlock_notify netgo
    when:
      - event: pull_request
        evaluate: 'CI_COMMIT_PULL_REQUEST_LABELS contains "build_pr_images"'
      - event: pull_request
        path: *when_path

  cross-compile-server:
    depends_on:
      - vendor
      - build-ui
    image: *xgo_image
    pull: true
    commands:
      - apt update
      - apt install -y tree
      # install just FIXME: 'apt install -y just' from Debian >= 13
      - curl --proto '=https' --tlsv1.2 -sSf https://just.systems/install.sh | bash -s -- --to /usr/bin/
      - just cross-compile-server
    environment:
      PLATFORMS: linux|arm/v7;linux|arm64/v8;linux|amd64;linux|ppc64le;linux|riscv64
      TAGS: sqlite sqlite_unlock_notify netgo
    when:
      event: [tag, deployment]

  publish-server-alpine-[pr]:
    depends_on:
      - cross-compile-server-[pr]
    image: *buildx_plugin
    settings:
      repo: crowci/crow-server
      dockerfile: docker/Dockerfile.server.alpine.multiarch.rootless
      platforms: *platforms_pr
      tag: pull_${CI_COMMIT_PULL_REQUEST}-alpine
      logins: *publish_logins
    when: &when-preview
      evaluate: 'CI_COMMIT_PULL_REQUEST_LABELS contains "build_pr_images"'
      event: pull_request

  build-server-[pr]:
    depends_on:
      - vendor
      - build-ui
      - cross-compile-server-[pr]
    image: *buildx_plugin
    settings:
      dry_run: true
      repo: crowci/crow-server
      dockerfile: docker/Dockerfile.server.multiarch.rootless
      platforms: *platforms_pr
      tag: pull_${CI_COMMIT_PULL_REQUEST}
    when: &when-dryrun
      - evaluate: 'not (CI_COMMIT_PULL_REQUEST_LABELS contains "build_pr_images")'
        event: pull_request
        path: *when_path

  publish-server-[dev]:
    depends_on:
      - cross-compile-server
    image: *buildx_plugin
    settings:
      repo: *publish_repos_server
      dockerfile: docker/Dockerfile.server.multiarch.rootless
      platforms: *platforms_server
      tag: [dev, 'dev-${CI_COMMIT_SHA:0:10}']
      logins: *publish_logins
    when: &when-publish-dev
      event: deployment

  publish-server-alpine-[dev]:
    depends_on:
      - cross-compile-server
    image: *buildx_plugin
    settings:
      repo: *publish_repos_server
      dockerfile: docker/Dockerfile.server.alpine.multiarch.rootless
      platforms: *platforms_alpine
      tag: [dev-alpine, 'dev-${CI_COMMIT_SHA:0:10}-alpine']
      logins: *publish_logins
    when: *when-publish-dev

  release-server:
    depends_on:
      - cross-compile-server
    image: *buildx_plugin
    settings:
      repo: *publish_repos_server
      dockerfile: docker/Dockerfile.server.multiarch.rootless
      platforms: *platforms_server
      tag: ['${CI_COMMIT_TAG%%.*}', '${CI_COMMIT_TAG%.*}-alpine', '${CI_COMMIT_TAG}']
      logins: *publish_logins
    when: &when-release
      event: tag

  release-server-alpine:
    depends_on:
      - cross-compile-server
    image: *buildx_plugin
    settings:
      repo: *publish_repos_server
      dockerfile: docker/Dockerfile.server.alpine.multiarch.rootless
      platforms: *platforms_alpine
      tag: ['${CI_COMMIT_TAG%%.*}-alpine', '${CI_COMMIT_TAG%.*}-alpine', '${CI_COMMIT_TAG}-alpine']
      logins: *publish_logins
    when: *when-release

  #############
  # A g e n t #
  #############

  publish-agent-alpine-[pr]:
    depends_on:
      - vendor
    image: *buildx_plugin
    settings:
      repo: crowci/crow-agent
      dockerfile: docker/Dockerfile.agent.alpine.multiarch
      platforms: *platforms_pr
      tag: pull_${CI_COMMIT_PULL_REQUEST}-alpine
      build_args: *build_args
      logins: *publish_logins
    when: *when-preview

  build-agent-[pr]:
    depends_on:
      - vendor
    image: *buildx_plugin
    settings:
      dry_run: true
      repo: crowci/crow-agent
      dockerfile: docker/Dockerfile.agent.multiarch
      platforms: *platforms_pr
      tag: pull_${CI_COMMIT_PULL_REQUEST}
      build_args: *build_args
    when: *when-dryrun

  publish-agent-[dev]:
    depends_on:
      - vendor
    image: *buildx_plugin
    settings:
      repo: *publish_repos_agent
      dockerfile: docker/Dockerfile.agent.multiarch
      platforms: *platforms_release
      tag: [dev, 'dev-${CI_COMMIT_SHA:0:10}']
      logins: *publish_logins
      build_args: *build_args
    when: &when-publish-dev
      event: deployment

  publish-agent-alpine-[dev]:
    depends_on:
      - vendor
    image: *buildx_plugin
    settings:
      repo: *publish_repos_agent
      dockerfile: docker/Dockerfile.agent.alpine.multiarch
      platforms: *platforms_alpine
      tag: [dev-alpine, 'dev-${CI_COMMIT_SHA:0:10}-alpine']
      logins: *publish_logins
      build_args: *build_args
    when: *when-publish-dev

  release-agent:
    depends_on:
      - vendor
    image: *buildx_plugin
    settings:
      repo: *publish_repos_agent
      dockerfile: docker/Dockerfile.agent.multiarch
      platforms: *platforms_release
      tag: ['${CI_COMMIT_TAG%%.*}', '${CI_COMMIT_TAG%.*}', '${CI_COMMIT_TAG}']
      logins: *publish_logins
      build_args: *build_args
    when: *when-release

  release-agent-alpine:
    depends_on:
      - vendor
    image: *buildx_plugin
    settings:
      repo: *publish_repos_agent
      dockerfile: docker/Dockerfile.agent.alpine.multiarch
      platforms: *platforms_alpine
      tag: ['${CI_COMMIT_TAG%%.*}-alpine', '${CI_COMMIT_TAG%.*}-alpine', '${CI_COMMIT_TAG}-alpine']
      logins: *publish_logins
      build_args: *build_args
    when: *when-release

  #########
  # C L I #
  #########

  build-cli-[pr]:
    depends_on:
      - vendor
    image: *buildx_plugin
    settings:
      dry_run: true
      repo: crowci/crow-cli
      dockerfile: docker/Dockerfile.cli.multiarch.rootless
      platforms: *platforms_pr
      tag: pull_${CI_COMMIT_PULL_REQUEST}
      build_args: *build_args
    when: *when-dryrun

  publish-cli-[dev]:
    depends_on:
      - vendor
    image: *buildx_plugin
    settings:
      repo: *publish_repos_cli
      dockerfile: docker/Dockerfile.cli.multiarch.rootless
      platforms: *platforms_release
      tag: [dev, 'dev-${CI_COMMIT_SHA:0:10}']
      logins: *publish_logins
      build_args: *build_args
    when: *when-publish-dev

  publish-cli-alpine-[dev]:
    depends_on:
      - vendor
    image: *buildx_plugin
    settings:
      repo: *publish_repos_cli
      dockerfile: docker/Dockerfile.cli.alpine.multiarch.rootless
      platforms: *platforms_alpine
      tag: [dev-alpine, 'dev-${CI_COMMIT_SHA:0:10}-alpine']
      logins: *publish_logins
      build_args: *build_args
    when: *when-publish-dev

  release-cli:
    depends_on:
      - vendor
    image: *buildx_plugin
    settings:
      repo: *publish_repos_cli
      dockerfile: docker/Dockerfile.cli.multiarch.rootless
      platforms: *platforms_release
      tag: ['${CI_COMMIT_TAG%%.*}', '${CI_COMMIT_TAG%.*}', '${CI_COMMIT_TAG}']
      logins: *publish_logins
      build_args: *build_args
    when: *when-release

  release-cli-alpine:
    depends_on:
      - vendor
    image: *buildx_plugin
    settings:
      repo: *publish_repos_cli
      dockerfile: docker/Dockerfile.cli.alpine.multiarch.rootless
      platforms: *platforms_alpine
      tag: ['${CI_COMMIT_TAG%%.*}-alpine', '${CI_COMMIT_TAG%.*}-alpine', '${CI_COMMIT_TAG}-alpine']
      logins: *publish_logins
      build_args: *build_args
    when: *when-release
